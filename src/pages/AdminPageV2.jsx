import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import { db } from '../firebase';
import { collection, query, orderBy, limit, getDocs, where, Timestamp } from 'firebase/firestore';
import AdminReviewsPage from './AdminReviewsPage';
import AdminFeedbackPage from './AdminFeedbackPage';
import AdminPublishedReviewsPage from './AdminPublishedReviewsPage';
import AdminVisitsPage from './AdminVisitsPage';
import './AdminPageV2.css';
import { ADMINS } from '../App';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞
const AnimatedBackground = () => {
  return (
    <div className="admin-bg">
      {[...Array(20)].map((_, index) => (
        <motion.div
          key={index}
          className="admin-particle"
          style={{
            top: `${Math.random() * 100}%`,
            left: `${Math.random() * 100}%`,
            width: `${Math.random() * 100 + 50}px`,
            height: `${Math.random() * 100 + 50}px`,
            opacity: Math.random() * 0.5 + 0.1,
          }}
          animate={{
            x: [0, Math.random() * 100 - 50, 0],
            y: [0, Math.random() * 100 - 50, 0],
          }}
          transition={{
            duration: Math.random() * 20 + 15,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />
      ))}
    </div>
  );
};

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(timestamp) {
  if (!timestamp || !timestamp.toDate) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  const date = timestamp.toDate();
  return new Intl.DateTimeFormat('ru-RU', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  }).format(date);
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
const StatCard = ({ title, value, change, icon, isLoading }) => {
  return (
    <motion.div 
      className="admin-stat-card"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.3 }}
    >
      <div className="admin-stat-title">
        <span className="icon">{icon}</span>
        {title}
      </div>
      {isLoading ? (
        <div className="admin-stat-value">...</div>
      ) : (
        <div className="admin-stat-value">{value}</div>
      )}
      {change && (
        <div className={`admin-stat-change ${change >= 0 ? 'positive' : 'negative'}`}>
          {change >= 0 ? '‚Üë' : '‚Üì'} {Math.abs(change)}% –∑–∞ 7 –¥–Ω–µ–π
        </div>
      )}
    </motion.div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const UsersTable = ({ users, isLoading }) => {
  return (
    <div className="admin-table-container">
      <table className="admin-table">
        <thead>
          <tr>
            <th>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
            <th>Email</th>
            <th>–°—Ç–∞—Ç—É—Å</th>
            <th>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥</th>
            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          {isLoading ? (
            <tr>
              <td colSpan="5" style={{ textAlign: 'center', padding: '2rem' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</td>
            </tr>
          ) : users.length > 0 ? (
            users.map((user) => (
              <tr key={user.id}>
                <td>{user.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}</td>
                <td>{user.email}</td>
                <td>
                  <span className={`status ${user.active ? 'active' : 'inactive'}`}>
                    {user.active ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                  </span>
                </td>
                <td>{formatDate(user.lastLogin)}</td>
                <td className="actions">
                  <button className="action-btn view" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">üëÅÔ∏è</button>
                  <button className="action-btn edit" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</button>
                  <button className="action-btn delete" title="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="5" style={{ textAlign: 'center', padding: '2rem' }}>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–∞–±–ª–∏—Ü—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
const ActivityTable = ({ activities, isLoading }) => {
  return (
    <div className="admin-table-container">
      <table className="admin-table">
        <thead>
          <tr>
            <th>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
            <th>–¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</th>
            <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
            <th>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è</th>
          </tr>
        </thead>
        <tbody>
          {isLoading ? (
            <tr>
              <td colSpan="4" style={{ textAlign: 'center', padding: '2rem' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</td>
            </tr>
          ) : activities.length > 0 ? (
            activities.map((activity) => (
              <tr key={activity.id}>
                <td>{activity.email || '–ì–æ—Å—Ç—å'}</td>
                <td>
                  {activity.type === 'login' && '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É'}
                  {activity.type === 'purchase' && '–ü–æ–∫—É–ø–∫–∞'}
                  {activity.type === 'survey' && '–û–ø—Ä–æ—Å'}
                  {activity.type === 'profile_update' && '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è'}
                  {activity.type === 'plan_view' && '–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–ª–∞–Ω–∞'}
                  {!['login', 'purchase', 'survey', 'profile_update', 'plan_view'].includes(activity.type) && '–î–µ–π—Å—Ç–≤–∏–µ'}
                </td>
                <td>{activity.desc || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}</td>
                <td>{formatDate(activity.timestamp)}</td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="4" style={{ textAlign: 'center', padding: '2rem' }}>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–∞—à–±–æ—Ä–¥–∞
const DashboardTab = () => {
  const [stats, setStats] = useState({
    totalUsers: 0,
    activeUsers: 0,
    totalVisits: 0,
    totalPurchases: 0
  });
  const [recentUsers, setRecentUsers] = useState([]);
  const [recentActivity, setRecentActivity] = useState([]);
  const [isLoadingStats, setIsLoadingStats] = useState(true);
  const [isLoadingUsers, setIsLoadingUsers] = useState(true);
  const [isLoadingActivity, setIsLoadingActivity] = useState(true);

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    async function fetchStats() {
      setIsLoadingStats(true);
      try {
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const usersQuery = query(collection(db, 'users'));
        const usersSnap = await getDocs(usersQuery);
        const totalUsers = usersSnap.size;

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Ö–æ–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π)
        const sevenDaysAgo = new Date();
        sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
        const timestamp = Timestamp.fromDate(sevenDaysAgo);
        
        const activeUsersQuery = query(
          collection(db, 'user_activity'),
          where('type', '==', 'login'),
          where('timestamp', '>=', timestamp)
        );
        const activeUsersSnap = await getDocs(activeUsersQuery);
        const activeUsers = new Set(activeUsersSnap.docs.map(doc => doc.data().email)).size;

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π
        const visitsQuery = query(collection(db, 'visit_logs'));
        const visitsSnap = await getDocs(visitsQuery);
        const totalVisits = visitsSnap.size;

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫
        const purchasesQuery = query(
          collection(db, 'user_activity'),
          where('type', '==', 'purchase')
        );
        const purchasesSnap = await getDocs(purchasesQuery);
        const totalPurchases = purchasesSnap.size;

        setStats({
          totalUsers,
          activeUsers,
          totalVisits,
          totalPurchases
        });
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      }
      setIsLoadingStats(false);
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    async function fetchRecentUsers() {
      setIsLoadingUsers(true);
      try {
        const usersQuery = query(
          collection(db, 'users'),
          orderBy('lastLogin', 'desc'),
          limit(5)
        );
        const usersSnap = await getDocs(usersQuery);
        setRecentUsers(usersSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
      }
      setIsLoadingUsers(false);
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    async function fetchRecentActivity() {
      setIsLoadingActivity(true);
      try {
        const activityQuery = query(
          collection(db, 'user_activity'),
          orderBy('timestamp', 'desc'),
          limit(10)
        );
        const activitySnap = await getDocs(activityQuery);
        setRecentActivity(activitySnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
      }
      setIsLoadingActivity(false);
    }

    fetchStats();
    fetchRecentUsers();
    fetchRecentActivity();
  }, []);

  return (
    <div>
      <h2><span className="icon">üìä</span> –î–∞—à–±–æ—Ä–¥</h2>
      
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="admin-stats">
        <StatCard 
          title="–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" 
          value={stats.totalUsers} 
          change={5} 
          icon="üë•" 
          isLoading={isLoadingStats} 
        />
        <StatCard 
          title="–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" 
          value={stats.activeUsers} 
          change={8} 
          icon="üî•" 
          isLoading={isLoadingStats} 
        />
        <StatCard 
          title="–í—Å–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏–π" 
          value={stats.totalVisits} 
          change={12} 
          icon="üëÅÔ∏è" 
          isLoading={isLoadingStats} 
        />
        <StatCard 
          title="–í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫" 
          value={stats.totalPurchases} 
          change={-3} 
          icon="üí∞" 
          isLoading={isLoadingStats} 
        />
      </div>
      
      {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ */}
      <h2><span className="icon">üë•</span> –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
      <UsersTable users={recentUsers} isLoading={isLoadingUsers} />
      
      {/* –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
      <h2><span className="icon">üìù</span> –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
      <ActivityTable activities={recentActivity} isLoading={isLoadingActivity} />
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
const UsersTab = () => {
  const [users, setUsers] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [filter, setFilter] = useState('all');

  useEffect(() => {
    async function fetchUsers() {
      setIsLoading(true);
      try {
        const usersQuery = query(
          collection(db, 'users'),
          orderBy('lastLogin', 'desc')
        );
        const usersSnap = await getDocs(usersQuery);
        setUsers(usersSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
      }
      setIsLoading(false);
    }

    fetchUsers();
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const filteredUsers = users.filter(user => {
    // –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ email
    const matchesSearch = 
      (user.name && user.name.toLowerCase().includes(searchTerm.toLowerCase())) || 
      (user.email && user.email.toLowerCase().includes(searchTerm.toLowerCase()));
    
    // –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
    if (filter === 'active') {
      return matchesSearch && user.active;
    } else if (filter === 'inactive') {
      return matchesSearch && !user.active;
    }
    
    return matchesSearch;
  });

  return (
    <div>
      <h2><span className="icon">üë•</span> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h2>
      
      {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
      <div className="admin-filters">
        <div className="admin-search">
          <span className="icon">üîç</span>
          <input 
            type="text" 
            placeholder="–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..." 
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
        </div>
        
        <select 
          className="admin-filter"
          value={filter}
          onChange={(e) => setFilter(e.target.value)}
        >
          <option value="all">–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</option>
          <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
          <option value="inactive">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ</option>
        </select>
        
        <button className="admin-btn admin-btn-primary">
          <span>‚ûï</span> –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        </button>
      </div>
      
      {/* –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <UsersTable users={filteredUsers} isLoading={isLoading} />
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
const ContentTab = () => {
  return (
    <div>
      <h2><span className="icon">üìÑ</span> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º</h2>
      
      <div className="admin-stats">
        <StatCard title="–í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π" value={12} icon="üìù" />
        <StatCard title="–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ" value={8} icon="‚úÖ" />
        <StatCard title="–ß–µ—Ä–Ω–æ–≤–∏–∫–∏" value={4} icon="üìã" />
        <StatCard title="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏" value={36} icon="üí¨" />
      </div>
      
      <div className="admin-filters">
        <div className="admin-search">
          <span className="icon">üîç</span>
          <input type="text" placeholder="–ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞..." />
        </div>
        
        <select className="admin-filter">
          <option value="all">–í—Å–µ —Ç–∏–ø—ã</option>
          <option value="articles">–°—Ç–∞—Ç—å–∏</option>
          <option value="pages">–°—Ç—Ä–∞–Ω–∏—Ü—ã</option>
          <option value="comments">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</option>
        </select>
        
        <button className="admin-btn admin-btn-primary">
          <span>‚ûï</span> –°–æ–∑–¥–∞—Ç—å
        </button>
      </div>
      
      <div className="admin-table-container">
        <table className="admin-table">
          <thead>
            <tr>
              <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
              <th>–¢–∏–ø</th>
              <th>–ê–≤—Ç–æ—Ä</th>
              <th>–î–∞—Ç–∞</th>
              <th>–°—Ç–∞—Ç—É—Å</th>
              <th>–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>–ö–∞–∫ –Ω–∞—á–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–∏—Ç–∞—Ç—å—Å—è</td>
              <td>–°—Ç–∞—Ç—å—è</td>
              <td>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</td>
              <td>12.05.2025</td>
              <td><span className="status active">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ</span></td>
              <td className="actions">
                <button className="action-btn view" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">üëÅÔ∏è</button>
                <button className="action-btn edit" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</button>
                <button className="action-btn delete" title="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
              </td>
            </tr>
            <tr>
              <td>–¢–æ–ø-10 —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –ø—Ä–µ—Å—Å–∞</td>
              <td>–°—Ç–∞—Ç—å—è</td>
              <td>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</td>
              <td>10.05.2025</td>
              <td><span className="status active">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ</span></td>
              <td className="actions">
                <button className="action-btn view" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">üëÅÔ∏è</button>
                <button className="action-btn edit" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</button>
                <button className="action-btn delete" title="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
              </td>
            </tr>
            <tr>
              <td>–ü—Ä–∞–≤–∏–ª–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</td>
              <td>–°—Ç–∞—Ç—å—è</td>
              <td>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</td>
              <td>08.05.2025</td>
              <td><span className="status pending">–ß–µ—Ä–Ω–æ–≤–∏–∫</span></td>
              <td className="actions">
                <button className="action-btn view" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">üëÅÔ∏è</button>
                <button className="action-btn edit" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</button>
                <button className="action-btn delete" title="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
const SettingsTab = () => {
  return (
    <div>
      <h2><span className="icon">‚öôÔ∏è</span> –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞</h2>
      
      <div className="admin-form-group">
        <label className="admin-form-label">–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞</label>
        <input type="text" className="admin-form-input" defaultValue="FitGenius" />
      </div>
      
      <div className="admin-form-group">
        <label className="admin-form-label">–û–ø–∏—Å–∞–Ω–∏–µ —Å–∞–π—Ç–∞</label>
        <textarea className="admin-form-textarea" defaultValue="–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º –ø–∏—Ç–∞–Ω–∏—è –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"></textarea>
      </div>
      
      <div className="admin-form-group">
        <label className="admin-form-label">–õ–æ–≥–æ—Ç–∏–ø —Å–∞–π—Ç–∞</label>
        <input type="file" className="admin-form-input" />
      </div>
      
      <div className="admin-form-group">
        <label className="admin-form-label">–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞</label>
        <select className="admin-form-select">
          <option value="green">–ó–µ–ª–µ–Ω–∞—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)</option>
          <option value="blue">–°–∏–Ω—è—è</option>
          <option value="purple">–§–∏–æ–ª–µ—Ç–æ–≤–∞—è</option>
          <option value="orange">–û—Ä–∞–Ω–∂–µ–≤–∞—è</option>
        </select>
      </div>
      
      <div className="admin-form-group">
        <label className="admin-form-label">Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</label>
        <input type="email" className="admin-form-input" defaultValue="admin@fitgenius.com" />
      </div>
      
      <button className="admin-btn admin-btn-primary">
        <span>üíæ</span> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      </button>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function AdminPageV2() {
  const [tab, setTab] = useState('dashboard');
  const navigate = useNavigate();
  const [isAdmin, setIsAdmin] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  useEffect(() => {
    const email = localStorage.getItem('fitgenius_user');
    let userEmail = '';
    
    if (email) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ JSON —Å—Ç—Ä–æ–∫–∞
        if (email.startsWith('{')) {
          const parsedData = JSON.parse(email);
          if (parsedData.email) {
            userEmail = parsedData.email;
          }
        } else if (email.includes('@')) {
          // –ü—Ä–æ—Å—Ç–æ email —Å—Ç—Ä–æ–∫–∞
          userEmail = email;
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        userEmail = email;
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const checkAdmin = () => {
      if (!userEmail) return false;
      
      for (const adminEmail of ADMINS) {
        if (userEmail.toLowerCase() === adminEmail.toLowerCase()) {
          return true;
        }
      }
      
      return false;
    };
    
    const adminStatus = checkAdmin();
    setIsAdmin(adminStatus);
    
    // –ï—Å–ª–∏ –Ω–µ –∞–¥–º–∏–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    if (!adminStatus) {
      navigate('/');
    }
  }, [navigate]);

  if (!isAdmin) {
    return (
      <div style={{ padding: '2rem', textAlign: 'center' }}>
        <h2>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...</h2>
      </div>
    );
  }

  return (
    <div className="admin-container">
      <AnimatedBackground />
      
      <motion.div 
        className="admin-content"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ */}
        <div className="admin-header">
          <div className="admin-header-decoration"></div>
          <div className="admin-header-decoration"></div>
          
          <h1 className="admin-title">–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ FitGenius</h1>
          <div className="admin-subtitle">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</div>
          
          <button 
            className="admin-btn admin-btn-secondary"
            onClick={() => navigate('/dashboard')}
            style={{ position: 'absolute', top: '1.5rem', right: '1.5rem' }}
          >
            <span>üè†</span> –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç
          </button>
        </div>
        
        {/* –í–∫–ª–∞–¥–∫–∏ */}
        <div className="admin-tabs">
          <div 
            className={`admin-tab ${tab === 'dashboard' ? 'active' : ''}`}
            onClick={() => setTab('dashboard')}
          >
            <span className="admin-tab-icon">üìä</span> –î–∞—à–±–æ—Ä–¥
          </div>
          <div 
            className={`admin-tab ${tab === 'users' ? 'active' : ''}`}
            onClick={() => setTab('users')}
          >
            <span className="admin-tab-icon">üë•</span> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
          </div>
          <div 
            className={`admin-tab ${tab === 'content' ? 'active' : ''}`}
            onClick={() => setTab('content')}
          >
            <span className="admin-tab-icon">üìÑ</span> –ö–æ–Ω—Ç–µ–Ω—Ç
          </div>
          <div 
            className={`admin-tab ${tab === 'reviews' ? 'active' : ''}`}
            onClick={() => setTab('reviews')}
          >
            <span className="admin-tab-icon">‚≠ê</span> –û—Ç–∑—ã–≤—ã
          </div>
          <div 
            className={`admin-tab ${tab === 'published' ? 'active' : ''}`}
            onClick={() => setTab('published')}
          >
            <span className="admin-tab-icon">üìù</span> –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
          </div>
          <div 
            className={`admin-tab ${tab === 'feedback' ? 'active' : ''}`}
            onClick={() => setTab('feedback')}
          >
            <span className="admin-tab-icon">üì®</span> –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
          </div>
          <div 
            className={`admin-tab ${tab === 'visits' ? 'active' : ''}`}
            onClick={() => setTab('visits')}
          >
            <span className="admin-tab-icon">üëÅÔ∏è</span> –ò—Å—Ç–æ—Ä–∏—è –∑–∞—Ö–æ–¥–æ–≤
          </div>
          <div 
            className={`admin-tab ${tab === 'settings' ? 'active' : ''}`}
            onClick={() => setTab('settings')}
          >
            <span className="admin-tab-icon">‚öôÔ∏è</span> –ù–∞—Å—Ç—Ä–æ–π–∫–∏
          </div>
        </div>
        
        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
        <AnimatePresence mode="wait">
          <motion.div 
            key={tab}
            className="admin-tab-content"
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -10 }}
            transition={{ duration: 0.3 }}
          >
            {tab === 'dashboard' && <DashboardTab />}
            {tab === 'users' && <UsersTab />}
            {tab === 'content' && <ContentTab />}
            {tab === 'reviews' && <AdminReviewsPage />}
            {tab === 'published' && <AdminPublishedReviewsPage />}
            {tab === 'feedback' && <AdminFeedbackPage />}
            {tab === 'visits' && <AdminVisitsPage />}
            {tab === 'settings' && <SettingsTab />}
          </motion.div>
        </AnimatePresence>
      </motion.div>
    </div>
  );
}

export default AdminPageV2;
