import { useNavigate } from 'react-router-dom';
import { useState, useEffect, useRef } from 'react';
import './HomePage.css?v=1.0.1';

function HomePage() {
  const navigate = useNavigate();
  const [modalOpen, setModalOpen] = useState(false);
  const [modalImage, setModalImage] = useState('');
  const [isVisible, setIsVisible] = useState({});
  const observerRef = useRef(null);
  const particleContainerRef = useRef(null);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –ø—Ä–∏–º–µ—Ä–æ–º
  const openModal = (imagePath) => {
    setModalImage(imagePath);
    setModalOpen(true);
    document.body.style.overflow = 'hidden'; // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const closeModal = () => {
    setModalOpen(false);
    document.body.style.overflow = 'auto'; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ Escape –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  useEffect(() => {
    const handleEscKey = (e) => {
      if (e.key === 'Escape' && modalOpen) {
        closeModal();
      }
    };
    
    window.addEventListener('keydown', handleEscKey);
    return () => window.removeEventListener('keydown', handleEscKey);
  }, [modalOpen]);
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Intersection Observer –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
  useEffect(() => {
    observerRef.current = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          setIsVisible(prev => ({ ...prev, [entry.target.dataset.id]: true }));
        }
      });
    }, { threshold: 0.1 });
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å –∫–ª–∞—Å—Å–æ–º 'animate-on-scroll'
    setTimeout(() => {
      document.querySelectorAll('.animate-on-scroll').forEach(el => {
        observerRef.current.observe(el);
      });
    }, 100);
    
    return () => {
      if (observerRef.current) {
        observerRef.current.disconnect();
      }
    };
  }, []);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ —á–∞—Å—Ç–∏—Ü –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –∫—É—Ä—Å–æ—Ä–∞
  const handleMouseMove = (e) => {
    if (!particleContainerRef.current) return;
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö —á–∞—Å—Ç–∏—Ü –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if (Math.random() > 0.3) return;
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —á–∞—Å—Ç–∏—Ü—É
    const particle = document.createElement('div');
    const size = Math.random() * 15 + 5;
    const duration = Math.random() * 2 + 1;
    
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ–æ—Ä–º—É —Å –±–æ–ª—å—à–∏–º –≤–µ—Å–æ–º –¥–ª—è –∫—Ä–∞—Å–∏–≤—ã—Ö —Ñ–æ—Ä–º
    const shapes = ['circle', 'circle', 'star', 'triangle'];
    const shape = shapes[Math.floor(Math.random() * shapes.length)];
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ —á–∞—Å—Ç–∏—Ü—ã
    particle.className = `particle ${shape}`;
    particle.style.width = `${size}px`;
    particle.style.height = `${size}px`;
    particle.style.left = `${e.pageX}px`;
    particle.style.top = `${e.pageY}px`;
    
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞ –≤ –∑–µ–ª–µ–Ω—ã—Ö —Ç–æ–Ω–∞—Ö —Å —É—á–µ—Ç–æ–º —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
    const colors = [
      'var(--primary)', 'var(--primary-dark)', 'var(--primary-light)', 
      'rgba(79, 209, 101, 0.7)', 'rgba(54, 177, 78, 0.8)'
    ];
    const color = colors[Math.floor(Math.random() * colors.length)];
    particle.style.backgroundColor = color;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    particleContainerRef.current.appendChild(particle);
    
    // –ê–Ω–∏–º–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ —á–∞—Å—Ç–∏—Ü—ã —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
    setTimeout(() => {
      const randomX = (Math.random() - 0.5) * 100;
      const randomY = (Math.random() - 0.5) * 100;
      const randomRotate = Math.random() * 360;
      particle.style.transform = `translate(${randomX}px, ${randomY}px) rotate(${randomRotate}deg) scale(${Math.random() * 0.5 + 0.8})`;
      particle.style.opacity = '0';
      particle.style.filter = `blur(${Math.random() * 2 + 1}px)`;
    }, 10);
    
    // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
      if (particleContainerRef.current && particleContainerRef.current.contains(particle)) {
        particle.remove();
      }
    }, duration * 1000);
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ–Ω–æ–≤—ã—Ö —á–∞—Å—Ç–∏—Ü, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  useEffect(() => {
    const createBackgroundParticles = () => {
      if (!particleContainerRef.current) return;
      
      const particle = document.createElement('div');
      const size = Math.random() * 10 + 3;
      const duration = Math.random() * 5 + 3;
      
      // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ
      const posX = Math.random() * window.innerWidth;
      const posY = Math.random() * 500; // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –ø–æ—è–≤–ª–µ–Ω–∏—è —á–∞—Å—Ç–∏—Ü
      
      // –í—ã–±–∏—Ä–∞–µ–º —Ñ–æ—Ä–º—É
      const shapes = ['circle', 'star', 'triangle'];
      const shape = shapes[Math.floor(Math.random() * shapes.length)];
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏
      particle.className = `particle ${shape} background-particle`;
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;
      particle.style.left = `${posX}px`;
      particle.style.top = `${posY}px`;
      particle.style.opacity = '0';
      
      // –¶–≤–µ—Ç —Å —É—á–µ—Ç–æ–º —Ç–µ–º—ã
      const colors = [
        'var(--primary)', 'var(--primary-dark)', 'var(--primary-light)', 
        'rgba(79, 209, 101, 0.5)', 'rgba(54, 177, 78, 0.6)'
      ];
      const color = colors[Math.floor(Math.random() * colors.length)];
      particle.style.backgroundColor = color;
      
      particleContainerRef.current.appendChild(particle);
      
      // –ù–∞—á–∞–ª—å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
      setTimeout(() => {
        particle.style.opacity = '0.6';
        const moveY = Math.random() * 200 + 100;
        const moveX = (Math.random() - 0.5) * 100;
        particle.style.transform = `translate(${moveX}px, ${moveY}px) rotate(${Math.random() * 360}deg)`;
      }, 10);
      
      // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É
      setTimeout(() => {
        if (particleContainerRef.current && particleContainerRef.current.contains(particle)) {
          particle.remove();
        }
      }, duration * 1000);
    };
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ —á–∞—Å—Ç–∏—Ü—ã —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
    const intervalId = setInterval(createBackgroundParticles, 300);
    
    return () => clearInterval(intervalId);
  }, []);

  return (
    <div className="home-bg">
      {/* –ì–µ—Ä–æ–∏—á–µ—Å–∫–∏–π –±–ª–æ–∫ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ñ–æ–Ω–æ–º */}
      <header className="home-hero" onMouseMove={handleMouseMove}>
        <div className="cursor-effect-container" ref={particleContainerRef}></div>
        <div className="hero-content" data-id="hero">
          <h1 className="hero-title visible">
            –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–∏—Ç–∞–Ω–∏—è –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
          </h1>
          <p className="hero-subtitle visible">
            –î–æ—Å—Ç–∏–≥–∞–π—Ç–µ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –ø–ª–∞–Ω–æ–º, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å
          </p>
          <div className="hero-cta visible">
            <div className="top-buttons-row">
              <button className="cta-button primary" onClick={() => navigate('/questionnaire?type=food')}>
                –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∏—Ç–∞–Ω–∏—è
              </button>
              <button className="cta-button secondary" onClick={() => navigate('/questionnaire?type=workout')}>
                –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
              </button>
            </div>
            <button className="cta-button combo premium" onClick={() => navigate('/questionnaire?type=combo')}>
              <span className="premium-star">‚òÖ</span> –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ <span className="premium-star">‚òÖ</span>
            </button>
          </div>
        </div>
        <div className="hero-scroll-indicator">
          <div className="scroll-icon"></div>
          <span>–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑</span>
        </div>
      </header>

      {/* –°–µ–∫—Ü–∏—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ */}
      <section className="home-benefits">
        <div className="section-container">
          <h2 className="section-title animate-on-scroll" data-id="benefits-title">–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç FitGenius?</h2>
          <div className="benefits-grid">
            <div className={`benefit-card animate-on-scroll ${isVisible['benefit1'] ? 'visible' : ''}`} data-id="benefit1">
              <div className="benefit-icon">
                <span role="img" aria-label="–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è">üéØ</span>
              </div>
              <h3>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</h3>
              <p>–ü—Ä–æ–≥—Ä–∞–º–º—ã, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —Ü–µ–ª–∏ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è</p>
            </div>
            <div className={`benefit-card animate-on-scroll ${isVisible['benefit2'] ? 'visible' : ''}`} data-id="benefit2">
              <div className="benefit-icon">
                <span role="img" aria-label="–Ω–∞—É–∫–∞">üß™</span>
              </div>
              <h3>–ù–∞—É—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥</h3>
              <p>–ü—Ä–æ–≥—Ä–∞–º–º—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–∏—Ç–∞–Ω–∏—è –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</p>
            </div>
            <div className={`benefit-card animate-on-scroll ${isVisible['benefit3'] ? 'visible' : ''}`} data-id="benefit3">
              <div className="benefit-icon">
                <span role="img" aria-label="–≤—Ä–µ–º—è">‚è±Ô∏è</span>
              </div>
              <h3>–≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏</h3>
              <p>–ì–æ—Ç–æ–≤—ã–π –ø–ª–∞–Ω –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ —Ä–∞—Å—á–µ—Ç–æ–≤</p>
            </div>
            <div className={`benefit-card animate-on-scroll ${isVisible['benefit4'] ? 'visible' : ''}`} data-id="benefit4">
              <div className="benefit-icon">
                <span role="img" aria-label="—Ä–µ–∑—É–ª—å—Ç–∞—Ç">üìà</span>
              </div>
              <h3>–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</h3>
              <p>–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –∂–µ–ª–∞–µ–º—ã–º –∏–∑–º–µ–Ω–µ–Ω–∏—è–º</p>
            </div>
          </div>
        </div>
      </section>

      {/* –°–µ–∫—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º */}
      <section className="home-examples">
        <div className="section-container">
          <h2 className="section-title animate-on-scroll" data-id="examples-title">–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–≥—Ä–∞–º–º</h2>
          <div className="examples-grid">
            <div className={`example-card animate-on-scroll ${isVisible['example1'] ? 'visible' : ''}`} data-id="example1">
              <div className="example-header">
                <div className="example-icon">
                  <span role="img" aria-label="–ø–∏—Ç–∞–Ω–∏–µ">üçé</span>
                </div>
                <h3>–†–∞—Ü–∏–æ–Ω –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è</h3>
              </div>
              <p className="example-desc">–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é, —É—á–∏—Ç—ã–≤–∞—é—â–µ–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ —Ü–µ–ª–∏.</p>
              <button className="example-btn" onClick={() => openModal('./example-food-day.png')}>
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä
              </button>
            </div>
            
            <div className={`example-card animate-on-scroll ${isVisible['example2'] ? 'visible' : ''}`} data-id="example2">
              <div className="example-header">
                <div className="example-icon">
                  <span role="img" aria-label="—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞">üí™</span>
                </div>
                <h3>–ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</h3>
              </div>
              <p className="example-desc">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–≥–æ —É—Ä–æ–≤–Ω—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è.</p>
              <button className="example-btn" onClick={() => openModal('./example-workout-day.png')}>
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä
              </button>
            </div>
            
            <div className={`example-card animate-on-scroll ${isVisible['example3'] ? 'visible' : ''}`} data-id="example3">
              <div className="example-header">
                <div className="example-icon">
                  <span role="img" aria-label="–∫–æ–º–ø–ª–µ–∫—Å">‚ö°</span>
                </div>
                <h3>–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h3>
              </div>
              <p className="example-desc">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî —Å–∏–Ω–µ—Ä–≥–∏—è —Ä–∞—Ü–∏–æ–Ω–∞ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.</p>
              <button className="example-btn special-btn" onClick={() => navigate('/questionnaire?type=combo')}>
                –°–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–ª–µ–∫—Å
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* –°–µ–∫—Ü–∏—è –ø—Ä–∏–∑—ã–≤–∞ –∫ –¥–µ–π—Å—Ç–≤–∏—é */}
      <section className="home-cta-section">
        <div className="section-container">
          <div className={`cta-content animate-on-scroll ${isVisible['cta-section'] ? 'visible' : ''}`} data-id="cta-section">
            <h2>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–π –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏?</h2>
            <p>–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —É–∂–µ —Å–µ–≥–æ–¥–Ω—è</p>
            <button className="cta-button primary large" onClick={() => navigate('/questionnaire?type=combo')}>
              –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
            </button>
          </div>
        </div>
      </section>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ */}
      {modalOpen && (
        <div className="modal-overlay" onClick={closeModal}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <button className="modal-close" onClick={closeModal}>√ó</button>
            <img src={modalImage} alt="–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã" className="modal-image" />
          </div>
        </div>
      )}
    </div>
  );
}

export default HomePage; 