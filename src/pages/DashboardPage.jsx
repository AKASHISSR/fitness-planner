import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { db, uploadUserAvatarToImgbb, getUserAvatar } from '../firebase';
import { doc, getDoc, setDoc } from 'firebase/firestore';
import './DashboardPage.css';
import { ADMINS } from '../App';

const foodPlan = [
  { day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–û–≤—Å—è–Ω–∫–∞ —Å —è–≥–æ–¥–∞–º–∏ –∏ –æ—Ä–µ—Ö–∞–º–∏' },
    { type: '–û–±–µ–¥', text: '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞, –≥—Ä–µ—á–∫–∞, –æ–≤–æ—â–∏' },
    { type: '–£–∂–∏–Ω', text: '–¢–≤–æ—Ä–æ–≥ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–Ø–±–ª–æ–∫–æ, –º–∏–Ω–¥–∞–ª—å' },
  ] },
  { day: '–í—Ç–æ—Ä–Ω–∏–∫', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–Ø–∏—á–Ω–∏—Ü–∞, —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–π —Ö–ª–µ–±' },
    { type: '–û–±–µ–¥', text: '–†—ã–±–∞, –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, —Å–∞–ª–∞—Ç' },
    { type: '–£–∂–∏–Ω', text: '–û–≤–æ—â–Ω–æ–µ —Ä–∞–≥—É' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–ì—Ä–µ—á–µ—Å–∫–∏–π –π–æ–≥—É—Ä—Ç' },
  ] },
  // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–Ω–∏ ...
];

const shoppingList = [
  '–û–≤—Å—è–Ω–∫–∞', '–Ø–≥–æ–¥—ã', '–û—Ä–µ—Ö–∏', '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞', '–ì—Ä–µ—á–∫–∞', '–û–≤–æ—â–∏',
  '–¢–≤–æ—Ä–æ–≥', '–§—Ä—É–∫—Ç—ã', '–Ø–±–ª–æ–∫–æ', '–ú–∏–Ω–¥–∞–ª—å', '–Ø–π—Ü–∞', '–•–ª–µ–±', '–†—ã–±–∞', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å', '–°–∞–ª–∞—Ç', '–ô–æ–≥—É—Ä—Ç'
];

const workoutPlan = [
  { day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', workout: '–°–∏–ª–æ–≤–∞—è: –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è, –æ—Ç–∂–∏–º–∞–Ω–∏—è, –ø–ª–∞–Ω–∫–∞' },
  { day: '–í—Ç–æ—Ä–Ω–∏–∫', workout: '–ö–∞—Ä–¥–∏–æ: –±–µ–≥ 30 –º–∏–Ω, —Å–∫–∞–∫–∞–ª–∫–∞' },
  { day: '–°—Ä–µ–¥–∞', workout: '–û—Ç–¥—ã—Ö –∏–ª–∏ –π–æ–≥–∞' },
  { day: '–ß–µ—Ç–≤–µ—Ä–≥', workout: '–°–∏–ª–æ–≤–∞—è: –≤—ã–ø–∞–¥—ã, –ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è, –ø—Ä–µ—Å—Å' },
  { day: '–ü—è—Ç–Ω–∏—Ü–∞', workout: '–ö–∞—Ä–¥–∏–æ: –≤–µ–ª–æ—Ç—Ä–µ–Ω–∞–∂—ë—Ä, –ø—Ä—ã–∂–∫–∏' },
  { day: '–°—É–±–±–æ—Ç–∞', workout: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∫–∞: –±—É—Ä–ø–∏, –≤—ã–ø—Ä—ã–≥–∏–≤–∞–Ω–∏—è, –ø–ª–∞–Ω–∫–∞' },
  { day: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', workout: '–û—Ç–¥—ã—Ö' },
];

function exportTextToPDF(text, filename = 'plan.pdf') {
  const win = window.open('', '', 'width=800,height=600');
  win.document.write('<pre style="font-family:inherit;font-size:16px;white-space:pre-wrap;">' + text + '</pre>');
  win.document.close();
  win.print();
}

function DashboardPage() {
  const [tab, setTab] = useState('food');
  const [paidType, setPaidType] = useState(null);
  const [mealPlan, setMealPlan] = useState('');
  const [workoutPlan, setWorkoutPlan] = useState('');
  const [user, setUser] = useState({ email: '', name: '' });
  const [editName, setEditName] = useState(false);
  const [newName, setNewName] = useState('');
  const [loadingName, setLoadingName] = useState(false);
  const [activity, setActivity] = useState([]);
  const [loadingActivity, setLoadingActivity] = useState(false);
  const [avatarUrl, setAvatarUrl] = useState('');
  const [loadingAvatar, setLoadingAvatar] = useState(false);
  const [avatarError, setAvatarError] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    setPaidType(localStorage.getItem('fitgenius_paid_type'));
    setMealPlan(localStorage.getItem('fitgenius_meal_plan') || '');
    setWorkoutPlan(localStorage.getItem('fitgenius_workout_plan') || '');
    const email = localStorage.getItem('fitgenius_user') || '';
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–º—è –∏–∑ Firestore, –µ—Å–ª–∏ –µ—Å—Ç—å email
    async function fetchName() {
      let name = localStorage.getItem('fitgenius_name') || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      if (email) {
        setLoadingName(true);
        try {
          const docRef = doc(db, 'users', email);
          const snap = await getDoc(docRef);
          if (snap.exists() && snap.data().name) {
            name = snap.data().name;
          }
        } catch {}
        setLoadingName(false);
      }
      setUser({ email, name });
      setNewName(name);
    }
    fetchName();
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    async function fetchActivity() {
      if (!email) return;
      setLoadingActivity(true);
      try {
        const q = await import('firebase/firestore');
        const { collection, query, where, orderBy, getDocs } = q;
        const qAct = query(collection(db, 'user_activity'), where('email', '==', email), orderBy('timestamp', 'desc'));
        const snap = await getDocs(qAct);
        setActivity(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
      } catch {}
      setLoadingActivity(false);
    }
    fetchActivity();
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    async function fetchAvatar() {
      if (!email) return;
      setLoadingAvatar(true);
      try {
        const url = await getUserAvatar(email);
        if (url) setAvatarUrl(url);
      } catch (e) {
        setAvatarError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞');
      }
      setLoadingAvatar(false);
    }
    fetchAvatar();
  }, []);

  const handleNameSave = async () => {
    setLoadingName(true);
    localStorage.setItem('fitgenius_name', newName);
    setUser(u => ({ ...u, name: newName }));
    setEditName(false);
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤ Firestore
    if (user.email) {
      try {
        await setDoc(doc(db, 'users', user.email), { name: newName }, { merge: true });
      } catch {}
    }
    setLoadingName(false);
  };

  const isFoodPaid = paidType === 'food' || paidType === 'combo';
  const isWorkoutPaid = paidType === 'workout' || paidType === 'combo';
  const isAdmin = user.email && ADMINS.includes(user.email);

  const handleExport = () => {
    if (tab === 'food' && mealPlan) {
      exportTextToPDF(mealPlan, 'meal-plan.pdf');
    } else if (tab === 'workout' && workoutPlan) {
      exportTextToPDF(workoutPlan, 'workout-plan.pdf');
    }
  };

  const handleAvatarChange = async (e) => {
    const file = e.target.files[0];
    console.log('–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:', file);
    console.log('Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.email);
    if (!file) return;
    if (!file.type.startsWith('image/')) {
      setAvatarError('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      console.error('–û—à–∏–±–∫–∞: –≤—ã–±—Ä–∞–Ω –Ω–µ image-—Ñ–∞–π–ª');
      return;
    }
    if (file.size > 2 * 1024 * 1024) {
      setAvatarError('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 2 –ú–ë');
      console.error('–û—à–∏–±–∫–∞: —Ñ–∞–π–ª –±–æ–ª—å—à–µ 2 –ú–ë');
      return;
    }
    setLoadingAvatar(true);
    setAvatarError('');
    try {
      const url = await uploadUserAvatarToImgbb(user.email, file);
      setAvatarUrl(url);
      console.log('–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω. URL:', url);
    } catch (e) {
      setAvatarError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞');
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞:', e);
    }
    setLoadingAvatar(false);
  };

  return (
    <div className="dash-bg">
      <div className="dash-center">
        {/* –ë–ª–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è */}
        <div className="profile-block" style={{display:'flex',alignItems:'center',gap:24,marginBottom:32,flexWrap:'wrap'}}>
          <div className="profile-avatar" style={{width:88,height:88,borderRadius:'50%',overflow:'hidden',background:'#e6f7ea',display:'flex',alignItems:'center',justifyContent:'center',boxShadow:'0 2px 12px #4fd16522',position:'relative'}}>
            {loadingAvatar ? (
              <span className="avatar-spinner" style={{fontSize:36,color:'#4fd165',animation:'spin 1s linear infinite'}}>‚è≥</span>
            ) : avatarUrl ? (
              <img src={avatarUrl} alt="avatar" style={{width:'100%',height:'100%',objectFit:'cover'}} />
            ) : (
              <span style={{fontSize:48,color:'#4fd165'}}>üë§</span>
            )}
          </div>
          <div style={{display:'flex',flexDirection:'column',gap:6}}>
            {editName ? (
              <div style={{display:'flex',gap:8,alignItems:'center'}}>
                <input
                  type="text"
                  value={newName}
                  onChange={e => setNewName(e.target.value)}
                  style={{fontWeight:800,fontSize:'1.1rem',padding:'4px 8px',borderRadius:8,border:'1px solid #ccc'}}
                  maxLength={32}
                  disabled={loadingName}
                />
                <button onClick={handleNameSave} disabled={loadingName || !newName.trim()} style={{padding:'4px 10px',borderRadius:8,border:'none',background:'#4fd165',color:'#fff',fontWeight:700,cursor:'pointer'}}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button onClick={()=>{setEditName(false);setNewName(user.name);}} disabled={loadingName} style={{padding:'4px 10px',borderRadius:8,border:'none',background:'#eee',color:'#333',fontWeight:700,cursor:'pointer'}}>–û—Ç–º–µ–Ω–∞</button>
                <button onClick={()=>{localStorage.removeItem('fitgenius_user');localStorage.removeItem('fitgenius_paid_type');window.location.href='/'}} style={{padding:'4px 14px',borderRadius:8,border:'none',background:'#4fd165',color:'#fff',fontWeight:700,cursor:'pointer',marginLeft:8}}>–í—ã–π—Ç–∏</button>
              </div>
            ) : (
              <div className="profile-block-name" style={{fontWeight:800,fontSize:'1.2rem',color:'#1a3a2b',display:'flex',alignItems:'center',gap:8}}>
                {user.name}
                <button onClick={()=>setEditName(true)} style={{background:'none',border:'none',color:'#4fd165',cursor:'pointer',fontSize:18}} title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è">‚úèÔ∏è</button>
                {loadingName && <span style={{fontSize:14,color:'#888',marginLeft:8}}>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...</span>}
                <button onClick={()=>{localStorage.removeItem('fitgenius_user');localStorage.removeItem('fitgenius_paid_type');window.location.href='/'}} style={{padding:'4px 14px',borderRadius:8,border:'none',background:'#4fd165',color:'#fff',fontWeight:700,cursor:'pointer',marginLeft:8}}>–í—ã–π—Ç–∏</button>
              </div>
            )}
            <div className="profile-block-email" style={{color:'#444',fontSize:'1rem'}}>{user.email || '‚Äî'}</div>
            {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞ */}
            <div style={{marginTop:8}}>
              <input
                id="avatar-upload"
                type="file"
                accept="image/*"
                style={{display:'none'}}
                onChange={handleAvatarChange}
                disabled={loadingAvatar}
              />
              <button
                type="button"
                className="avatar-upload-btn"
                style={{
                  padding:'6px 18px',
                  borderRadius:8,
                  border:'1px solid #4fd165',
                  background:'#fff',
                  color:'#1a3a2b',
                  fontWeight:600,
                  fontSize:'1rem',
                  cursor: loadingAvatar ? 'not-allowed' : 'pointer',
                  opacity: loadingAvatar ? 0.6 : 1,
                  marginTop:0
                }}
                disabled={loadingAvatar}
                onClick={() => document.getElementById('avatar-upload').click()}
              >
                {loadingAvatar ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä'}
              </button>
            </div>
            {avatarError && <div style={{color:'red',fontSize:13,marginTop:4}}>{avatarError}</div>}
          </div>
        </div>
        {/* --- –∫–æ–Ω–µ—Ü –±–ª–æ–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è --- */}
        <div style={{ 
          display: 'flex', 
          gap: 16, 
          marginBottom: 24,
          flexWrap: 'wrap',
          justifyContent: 'flex-start'
        }}>
          <button
            className={`dash-btn${tab === 'food' ? ' dash-subscribe' : ''}`}
            onClick={() => setTab('food')}
            style={{ flex: '1 1 auto', minWidth: '120px' }}
          >
            –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∏—Ç–∞–Ω–∏—è
          </button>
          <button
            className={`dash-btn${tab === 'workout' ? ' dash-subscribe' : ''}`}
            onClick={() => setTab('workout')}
            style={{ flex: '1 1 auto', minWidth: '120px' }}
          >
            –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
          </button>
          <button
            className={`dash-btn${tab === 'activity' ? ' dash-subscribe' : ''}`}
            onClick={() => setTab('activity')}
            style={{ flex: '1 1 auto', minWidth: '120px' }}
          >
            –ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
          </button>
          <button
            className="dash-btn"
            onClick={handleExport}
            disabled={tab === 'food' ? !mealPlan : !workoutPlan}
            style={{ flex: '1 1 auto', minWidth: '120px' }}
          >
            –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF
          </button>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ '–ê–¥–º–∏–Ω' —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ */}
        {isAdmin && (
          <button className="dash-btn" style={{marginBottom:16,background:'#4fd165',color:'#fff',fontWeight:700}} onClick={()=>navigate('/admin')}>
            –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
          </button>
        )}

        {tab === 'food' && (
          isFoodPaid ? (
            mealPlan
              ? <pre style={{ whiteSpace: 'pre-wrap', textAlign: 'left' }}>{mealPlan}</pre>
              : <div>–í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∏—Ç–∞–Ω–∏—è —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è!</div>
          ) : (
            <div>
              <b>–ù–µ –æ–ø–ª–∞—á–µ–Ω–æ.</b> –ü—Ä–æ–π–¥–∏—Ç–µ –æ–ø—Ä–æ—Å –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É!
            </div>
          )
        )}

        {tab === 'workout' && (
          isWorkoutPaid ? (
            workoutPlan
              ? <pre style={{ whiteSpace: 'pre-wrap', textAlign: 'left' }}>{workoutPlan}</pre>
              : <div>–í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è!</div>
          ) : (
            <div>
              <b>–ù–µ –æ–ø–ª–∞—á–µ–Ω–æ.</b> –ü—Ä–æ–π–¥–∏—Ç–µ –æ–ø—Ä–æ—Å –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É!
            </div>
          )
        )}

        {tab === 'activity' && (
          <div style={{marginTop:8}}>
            <h3 style={{marginBottom:12}}>–ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h3>
            {loadingActivity ? (
              <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            ) : activity.length === 0 ? (
              <div>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.</div>
            ) : (
              <div style={{
                display: 'flex',
                flexDirection: 'column',
                gap: 12,
                maxWidth: '100%',
                overflowX: 'hidden'
              }}>
                {activity.map(ev => (
                  <div key={ev.id} style={{
                    background: '#f7f8fa',
                    borderRadius: 12,
                    padding: 16,
                    boxShadow: '0 2px 8px #0001',
                    display: 'flex',
                    flexDirection: 'column',
                    gap: 8
                  }}>
                    <div style={{
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'flex-start',
                      flexWrap: 'wrap',
                      gap: 8
                    }}>
                      <div style={{
                        fontSize: '0.9rem',
                        color: '#666',
                        whiteSpace: 'nowrap'
                      }}>
                        {ev.timestamp ? new Date(ev.timestamp.seconds*1000).toLocaleString() : ''}
                      </div>
                      <div style={{
                        background: '#e6f7ea',
                        color: '#1a3a2b',
                        padding: '4px 12px',
                        borderRadius: 20,
                        fontSize: '0.9rem',
                        fontWeight: 600
                      }}>
                        {ev.type || '-'}
                      </div>
                    </div>
                    <div style={{
                      fontSize: '1rem',
                      color: '#333',
                      wordBreak: 'break-word'
                    }}>
                      {ev.desc || '-'}
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
}

export default DashboardPage; 