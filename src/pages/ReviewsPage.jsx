import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import './ReviewsPage.css?v=1.0.3';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü –Ω–∞ —Ñ–æ–Ω–µ
const AnimatedBackground = () => {
  return (
    <div className="animated-background">
      {[...Array(20)].map((_, index) => (
        <div 
          key={index} 
          className="particle"
          style={{
            left: `${Math.random() * 100}%`,
            top: `${Math.random() * 100}%`,
            animationDelay: `${Math.random() * 5}s`,
            animationDuration: `${5 + Math.random() * 10}s`,
            width: `${10 + Math.random() * 30}px`,
            height: `${10 + Math.random() * 30}px`,
            opacity: 0.1 + Math.random() * 0.2
          }}
        />
      ))}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–∑—ã–≤–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
const ReviewCard = ({ review, index }) => {
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –æ—Ü–µ–Ω–∫—É –æ—Ç 4 –¥–æ 5 –∑–≤–µ–∑–¥
  const rating = review.rating || (4 + Math.random());
  const fullStars = Math.floor(rating);
  const hasHalfStar = rating % 1 >= 0.5;
  
  return (
    <motion.div 
      className="review-card"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: index * 0.1, duration: 0.5 }}
      whileHover={{ y: -5, boxShadow: '0 10px 25px rgba(0, 0, 0, 0.1)' }}
    >
      <div className="review-header">
        <div className="review-avatar">
          {review.name.charAt(0).toUpperCase()}
        </div>
        <div className="review-info">
          <span className="review-name">{review.name}</span>
          <div className="review-rating">
            {[...Array(5)].map((_, i) => (
              <span key={i} className="star">
                {i < fullStars ? '‚òÖ' : (i === fullStars && hasHalfStar ? '‚Ø™' : '‚òÜ')}
              </span>
            ))}
          </div>
        </div>
        <span className="review-date">{review.date}</span>
      </div>
      <div className="review-text">{review.text}</div>
      <div className="review-footer">
        <div className="review-likes">
          <span className="like-icon">üëç</span>
          <span className="like-count">{Math.floor(Math.random() * 20)}</span>
        </div>
      </div>
    </motion.div>
  );
};

function ReviewsPage() {
  const [published, setPublished] = useState([]);
  const [form, setForm] = useState({ name: '', text: '', rating: 5 });
  const [sent, setSent] = useState(false);
  const [error, setError] = useState('');
  const [page, setPage] = useState(1);
  const [showConfetti, setShowConfetti] = useState(false);
  const REVIEWS_PER_PAGE = 6;

  // –ü—Ä–∏–º–µ—Ä –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö
  const demoReviews = [
    { name: '–ê–Ω–Ω–∞ –ú.', text: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∏—Ç–∞–Ω–∏—è –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ—à–ª–∞ –º–Ω–µ! –ó–∞ –º–µ—Å—è—Ü -4 –∫–≥ –∏ –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ —ç–Ω–µ—Ä–≥–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É—é!', date: '15.05.2025', rating: 5 },
    { name: '–ò–≤–∞–Ω –ö.', text: '–û—á–µ–Ω—å —É–¥–æ–±–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ. –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –≥—Ä–∞–º–æ—Ç–Ω–æ, —á—É–≤—Å—Ç–≤—É—é –ø—Ä–æ–≥—Ä–µ—Å—Å —É–∂–µ —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏.', date: '10.05.2025', rating: 4.5 },
    { name: '–ú–∞—Ä–∏—è –°.', text: '–í—ã–±—Ä–∞–ª–∞ –∫–æ–º–±–æ-—Ç–∞—Ä–∏—Ñ, —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã–≥–æ–¥–Ω–æ! –ü–∏—Ç–∞–Ω–∏–µ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –æ—Ç–ª–∏—á–Ω–æ –¥–æ–ø–æ–ª–Ω—è—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞. –°–µ—Ä–≤–∏—Å –Ω–∞ –≤—ã—Å–æ—Ç–µ.', date: '05.05.2025', rating: 5 },
    { name: '–î–º–∏—Ç—Ä–∏–π –í.', text: '–ü–æ–ª—å–∑—É—é—Å—å —É–∂–µ 3 –º–µ—Å—è—Ü–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–≤–∑–æ—à–ª–∏ –æ–∂–∏–¥–∞–Ω–∏—è. –û—Å–æ–±–µ–Ω–Ω–æ –Ω—Ä–∞–≤–∏—Ç—Å—è, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –º–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å.', date: '28.04.2025', rating: 4.5 },
    { name: '–ï–ª–µ–Ω–∞ –¢.', text: '–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–∏–Ω—É—Å 6 –∫–≥ –∑–∞ 2 –º–µ—Å—è—Ü–∞!', date: '20.04.2025', rating: 5 },
    { name: '–ê–ª–µ–∫—Å–µ–π –ü.', text: '–û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω –ø—Ä–æ–≥—Ä–∞–º–º–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫. –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ–¥–æ–±—Ä–∞–Ω—ã —Å —É—á–µ—Ç–æ–º –º–æ–µ–≥–æ —É—Ä–æ–≤–Ω—è, –Ω–∞–≥—Ä—É–∑–∫–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é!', date: '15.04.2025', rating: 4 },
    { name: '–û–ª—å–≥–∞ –ù.', text: 'FitGenius –ø–æ–º–æ–≥ –º–Ω–µ –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –ø–∏—Ç–∞–Ω–∏—é. –¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ä–∞—Ü–∏–æ–Ω. –°–ø–∞—Å–∏–±–æ!', date: '10.04.2025', rating: 5 },
    { name: '–°–µ—Ä–≥–µ–π –ú.', text: '–ó–∞–Ω–∏–º–∞—é—Å—å –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ —É–∂–µ 2 –º–µ—Å—è—Ü–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ—Å—Ç—å, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –±–æ–ª—å—à–µ –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è—Ö.', date: '05.04.2025', rating: 4 },
  ];

  useEffect(() => {
    let pub = JSON.parse(localStorage.getItem('fitgenius_reviews_published') || '[]');
    // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–æ—Ç–∑—ã–≤—ã
    if (pub.length === 0) {
      pub = demoReviews;
      localStorage.setItem('fitgenius_reviews_published', JSON.stringify(demoReviews));
    }
    setPublished(pub);
  }, []);

  const handleChange = e => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleRatingChange = (rating) => {
    setForm({ ...form, rating });
  };

  const handleSubmit = e => {
    e.preventDefault();
    if (!form.name || !form.text) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }
    setError('');
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –≤ localStorage (–æ–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏)
    const reviews = JSON.parse(localStorage.getItem('fitgenius_reviews_pending') || '[]');
    reviews.push({ ...form, date: new Date().toLocaleString() });
    localStorage.setItem('fitgenius_reviews_pending', JSON.stringify(reviews));
    setSent(true);
    setShowConfetti(true);
    setTimeout(() => {
      setSent(false);
      setShowConfetti(false);
    }, 4000);
    setForm({ name: '', text: '', rating: 5 });
  };

  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
  const totalPages = Math.ceil(published.length / REVIEWS_PER_PAGE);
  const paginatedReviews = published.slice((page - 1) * REVIEWS_PER_PAGE, page * REVIEWS_PER_PAGE);
  const handlePageChange = (p) => setPage(p);

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç–∑—ã–≤–∞–º
  const averageRating = published.reduce((acc, curr) => acc + (curr.rating || 5), 0) / published.length;
  const fiveStarPercent = (published.filter(r => Math.round(r.rating || 5) === 5).length / published.length) * 100;

  return (
    <div className="reviews-bg">
      <AnimatedBackground />
      
      <motion.div 
        className="reviews-container"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        <motion.h1 
          className="reviews-heading"
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2, duration: 0.5 }}
        >
          –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        </motion.h1>
        
        <motion.p 
          className="reviews-subheading"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.3, duration: 0.5 }}
        >
          –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ –Ω–∞—à–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –ø–∏—Ç–∞–Ω–∏—è –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
        </motion.p>
        
        <div className="reviews-stats">
          <motion.div 
            className="stat-card"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.4, duration: 0.5 }}
          >
            <div className="stat-value">{averageRating.toFixed(1)}</div>
            <div className="stat-rating">
              {[...Array(5)].map((_, i) => (
                <span key={i} className="star">
                  {i < Math.floor(averageRating) ? '‚òÖ' : (i === Math.floor(averageRating) && averageRating % 1 >= 0.5 ? '‚Ø™' : '‚òÜ')}
                </span>
              ))}
            </div>
            <div className="stat-label">–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞</div>
          </motion.div>
          
          <motion.div 
            className="stat-card"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.5, duration: 0.5 }}
          >
            <div className="stat-value">{published.length}</div>
            <div className="stat-label">–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤</div>
          </motion.div>
          
          <motion.div 
            className="stat-card"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.6, duration: 0.5 }}
          >
            <div className="stat-value">{fiveStarPercent.toFixed(0)}%</div>
            <div className="stat-label">5-–∑–≤–µ–∑–¥–æ—á–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤</div>
          </motion.div>
        </div>
        
        <motion.div 
          className="reviews-list"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.7, duration: 0.5 }}
        >
          {published.length === 0 ? (
            <div className="reviews-empty">–ü–æ–∫–∞ –Ω–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.</div>
          ) : (
            paginatedReviews.map((review, index) => (
              <ReviewCard key={index} review={review} index={index} />
            ))
          )}
        </motion.div>
        
        {totalPages > 1 && (
          <motion.div 
            className="reviews-pagination"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.8, duration: 0.5 }}
          >
            {Array.from({ length: totalPages }, (_, idx) => (
              <motion.button
                key={idx}
                className={`reviews-page-btn${page === idx + 1 ? ' active' : ''}`}
                onClick={() => handlePageChange(idx + 1)}
                disabled={page === idx + 1}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.95 }}
              >
                {idx + 1}
              </motion.button>
            ))}
          </motion.div>
        )}
        
        <motion.div 
          className="review-form-container"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.9, duration: 0.5 }}
        >
          <h2 className="form-heading">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º</h2>
          <p className="form-subheading">–í–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ –∏ –ø–æ–º–æ–∂–µ—Ç –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä</p>
          
          <form className="review-form" onSubmit={handleSubmit}>
            <div className="form-group">
              <label htmlFor="name">–í–∞—à–µ –∏–º—è</label>
              <input
                type="text"
                id="name"
                name="name"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                value={form.name}
                onChange={handleChange}
                className="review-input"
                required
              />
            </div>
            
            <div className="form-group">
              <label htmlFor="rating">–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞</label>
              <div className="rating-selector">
                {[1, 2, 3, 4, 5].map((star) => (
                  <span 
                    key={star} 
                    className={`rating-star ${star <= form.rating ? 'active' : ''}`}
                    onClick={() => handleRatingChange(star)}
                  >
                    ‚òÖ
                  </span>
                ))}
              </div>
            </div>
            
            <div className="form-group">
              <label htmlFor="text">–í–∞—à –æ—Ç–∑—ã–≤</label>
              <textarea
                id="text"
                name="text"
                placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è FitGenius..."
                value={form.text}
                onChange={handleChange}
                className="review-textarea"
                required
              />
            </div>
            
            <AnimatePresence>
              {error && (
                <motion.div 
                  className="review-error"
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                >
                  <span className="error-icon">‚ö†Ô∏è</span> {error}
                </motion.div>
              )}
              
              {sent && (
                <motion.div 
                  className="review-success"
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                >
                  <span className="success-icon">‚úì</span> –°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.
                </motion.div>
              )}
            </AnimatePresence>
            
            <motion.button 
              type="submit" 
              className="review-btn"
              whileHover={{ scale: 1.05, boxShadow: '0 8px 20px rgba(79, 209, 101, 0.3)' }}
              whileTap={{ scale: 0.95 }}
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
            </motion.button>
          </form>
        </motion.div>
      </motion.div>
      
      {showConfetti && (
        <div className="confetti-container">
          {[...Array(100)].map((_, index) => (
            <div 
              key={index} 
              className="confetti"
              style={{
                left: `${Math.random() * 100}%`,
                animationDelay: `${Math.random() * 0.5}s`,
                backgroundColor: `hsl(${Math.random() * 360}, 80%, 60%)`
              }}
            />
          ))}
        </div>
      )}
    </div>
  );
};

export default ReviewsPage;