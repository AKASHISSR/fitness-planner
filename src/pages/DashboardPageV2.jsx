import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { db, uploadUserAvatarToImgbb, getUserAvatar, logUserActivity } from '../firebase';
import { doc, getDoc, setDoc, collection, query, where, orderBy, getDocs } from 'firebase/firestore';
import { motion, AnimatePresence } from 'framer-motion';
import './DashboardPageV2-beautiful.css?v=3.0.0';
import { ADMINS } from '../App';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–ª–∞–Ω–æ–≤ –ø–∏—Ç–∞–Ω–∏—è –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
const foodPlan = [
  { day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–û–≤—Å—è–Ω–∫–∞ —Å —è–≥–æ–¥–∞–º–∏ –∏ –æ—Ä–µ—Ö–∞–º–∏' },
    { type: '–û–±–µ–¥', text: '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞, –≥—Ä–µ—á–∫–∞, –æ–≤–æ—â–∏' },
    { type: '–£–∂–∏–Ω', text: '–¢–≤–æ—Ä–æ–≥ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–Ø–±–ª–æ–∫–æ, –º–∏–Ω–¥–∞–ª—å' },
  ] },
  { day: '–í—Ç–æ—Ä–Ω–∏–∫', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–Ø–∏—á–Ω–∏—Ü–∞, —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–π —Ö–ª–µ–±' },
    { type: '–û–±–µ–¥', text: '–†—ã–±–∞, –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, —Å–∞–ª–∞—Ç' },
    { type: '–£–∂–∏–Ω', text: '–û–≤–æ—â–Ω–æ–µ —Ä–∞–≥—É' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–ì—Ä–µ—á–µ—Å–∫–∏–π –π–æ–≥—É—Ä—Ç' },
  ] },
  { day: '–°—Ä–µ–¥–∞', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–¢–≤–æ—Ä–æ–∂–Ω–∞—è –∑–∞–ø–µ–∫–∞–Ω–∫–∞ —Å —è–≥–æ–¥–∞–º–∏' },
    { type: '–û–±–µ–¥', text: '–ò–Ω–¥–µ–π–∫–∞, –∫–∏–Ω–æ–∞, –æ–≤–æ—â–∏' },
    { type: '–£–∂–∏–Ω', text: '–û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–ë–∞–Ω–∞–Ω, –æ—Ä–µ—Ö–∏' },
  ] },
  { day: '–ß–µ—Ç–≤–µ—Ä–≥', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–°–º—É–∑–∏ —Å –ø—Ä–æ—Ç–µ–∏–Ω–æ–º –∏ —Ñ—Ä—É–∫—Ç–∞–º–∏' },
    { type: '–û–±–µ–¥', text: '–ì–æ–≤—è–¥–∏–Ω–∞, –±—É—Ä—ã–π —Ä–∏—Å, –æ–≤–æ—â–∏' },
    { type: '–£–∂–∏–Ω', text: '–†—ã–±–Ω—ã–π —Å–∞–ª–∞—Ç' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–ü—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –±–∞—Ç–æ–Ω—á–∏–∫' },
  ] },
  { day: '–ü—è—Ç–Ω–∏—Ü–∞', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–ì—Ä–µ—á–Ω–µ–≤–∞—è –∫–∞—à–∞ —Å —è–π—Ü–æ–º' },
    { type: '–û–±–µ–¥', text: '–ö—É—Ä–∏–Ω—ã–π —Å—É–ø, —Ö–ª–µ–±' },
    { type: '–£–∂–∏–Ω', text: '–¢—É—à–µ–Ω—ã–µ –æ–≤–æ—â–∏ —Å —Ç–æ—Ñ—É' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–¢–≤–æ—Ä–æ–≥ —Å –º–µ–¥–æ–º' },
  ] },
  { day: '–°—É–±–±–æ—Ç–∞', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–û–≤—Å—è–Ω–æ–±–ª–∏–Ω —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∏ —è–≥–æ–¥–∞–º–∏' },
    { type: '–û–±–µ–¥', text: '–ü–∞—Å—Ç–∞ —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏' },
    { type: '–£–∂–∏–Ω', text: '–ö—É—Ä–∏–Ω—ã–π —Å–∞–ª–∞—Ç' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–§—Ä—É–∫—Ç–æ–≤—ã–π —Å–∞–ª–∞—Ç' },
  ] },
  { day: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', meals: [
    { type: '–ó–∞–≤—Ç—Ä–∞–∫', text: '–ë–ª–∏–Ω—ã —Å —Ç–≤–æ—Ä–æ–≥–æ–º' },
    { type: '–û–±–µ–¥', text: '–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è –∫—É—Ä–∏—Ü–∞ —Å –æ–≤–æ—â–∞–º–∏' },
    { type: '–£–∂–∏–Ω', text: '–¢–≤–æ—Ä–æ–≥ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏' },
    { type: '–ü–µ—Ä–µ–∫—É—Å', text: '–û—Ä–µ—Ö–∏, —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã' },
  ] },
];

const shoppingList = [
  '–û–≤—Å—è–Ω–∫–∞', '–Ø–≥–æ–¥—ã', '–û—Ä–µ—Ö–∏', '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞', '–ì—Ä–µ—á–∫–∞', '–û–≤–æ—â–∏',
  '–¢–≤–æ—Ä–æ–≥', '–§—Ä—É–∫—Ç—ã', '–Ø–±–ª–æ–∫–æ', '–ú–∏–Ω–¥–∞–ª—å', '–Ø–π—Ü–∞', '–•–ª–µ–±', '–†—ã–±–∞', 
  '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å', '–°–∞–ª–∞—Ç', '–ô–æ–≥—É—Ä—Ç', '–ò–Ω–¥–µ–π–∫–∞', '–ö–∏–Ω–æ–∞', '–ë–∞–Ω–∞–Ω', 
  '–ü—Ä–æ—Ç–µ–∏–Ω', '–ì–æ–≤—è–¥–∏–Ω–∞', '–ë—É—Ä—ã–π —Ä–∏—Å', '–ü—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –±–∞—Ç–æ–Ω—á–∏–∫', 
  '–ú–µ–¥', '–¢–æ—Ñ—É', '–ü–∞—Å—Ç–∞', '–ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã', '–ë–ª–∏–Ω—ã', '–°—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã'
];

const workoutPlan = [
  { day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', workout: '–°–∏–ª–æ–≤–∞—è: –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è 3x15, –æ—Ç–∂–∏–º–∞–Ω–∏—è 3x12, –ø–ª–∞–Ω–∫–∞ 3x60 —Å–µ–∫' },
  { day: '–í—Ç–æ—Ä–Ω–∏–∫', workout: '–ö–∞—Ä–¥–∏–æ: –±–µ–≥ 30 –º–∏–Ω, —Å–∫–∞–∫–∞–ª–∫–∞ 10 –º–∏–Ω, –≤–µ–ª–æ—Ç—Ä–µ–Ω–∞–∂–µ—Ä 15 –º–∏–Ω' },
  { day: '–°—Ä–µ–¥–∞', workout: '–û—Ç–¥—ã—Ö –∏–ª–∏ –π–æ–≥–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è 30 –º–∏–Ω' },
  { day: '–ß–µ—Ç–≤–µ—Ä–≥', workout: '–°–∏–ª–æ–≤–∞—è: –≤—ã–ø–∞–¥—ã 3x12, –ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è 3x8, –ø—Ä–µ—Å—Å 3x20' },
  { day: '–ü—è—Ç–Ω–∏—Ü–∞', workout: '–ö–∞—Ä–¥–∏–æ: –≤–µ–ª–æ—Ç—Ä–µ–Ω–∞–∂—ë—Ä 20 –º–∏–Ω, –ø—Ä—ã–∂–∫–∏ 10 –º–∏–Ω, —ç–ª–ª–∏–ø—Å 15 –º–∏–Ω' },
  { day: '–°—É–±–±–æ—Ç–∞', workout: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∫–∞: –±—É—Ä–ø–∏ 3x10, –≤—ã–ø—Ä—ã–≥–∏–≤–∞–Ω–∏—è 3x15, –ø–ª–∞–Ω–∫–∞ –±–æ–∫–æ–≤–∞—è 3x30 —Å–µ–∫' },
  { day: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', workout: '–û—Ç–¥—ã—Ö –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ' },
];

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞
const AnimatedBackground = () => {
  return (
    <div className="dashboard-bg">
      {[...Array(15)].map((_, index) => (
        <motion.div
          key={index}
          className="dashboard-particle"
          style={{
            top: `${Math.random() * 100}%`,
            left: `${Math.random() * 100}%`,
            width: `${Math.random() * 80 + 40}px`,
            height: `${Math.random() * 80 + 40}px`,
          }}
          animate={{
            x: [0, Math.random() * 100 - 50, 0],
            y: [0, Math.random() * 100 - 50, 0],
          }}
          transition={{
            duration: Math.random() * 20 + 10,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />
      ))}
    </div>
  );
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ç–µ–∫—Å—Ç–∞ –≤ PDF
function exportTextToPDF(text, filename = 'plan.pdf') {
  console.log('–≠–∫—Å–ø–æ—Ä—Ç –≤ PDF:', filename);
  alert('–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ');
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(timestamp) {
  if (!timestamp) return '';
  const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);
  return date.toLocaleString('ru-RU');
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
function getActivityIcon(type) {
  const icons = {
    login: 'üîê',
    purchase: 'üí≥',
    survey: 'üìù',
    profile_update: 'üë§',
    plan_view: 'üìñ'
  };
  return icons[type] || 'üìä';
}

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
function DashboardPageV2() {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è
  const [tab, setTab] = useState('food');
  const [paidType, setPaidType] = useState(null);
  const [mealPlan, setMealPlan] = useState('');
  const [workoutPlanText, setWorkoutPlanText] = useState('');
  const [user, setUser] = useState({ email: '', name: '' });
  const [editName, setEditName] = useState(false);
  const [newName, setNewName] = useState('');
  const [loadingName, setLoadingName] = useState(false);
  const [activity, setActivity] = useState([]);
  const [loadingActivity, setLoadingActivity] = useState(false);
  const [avatarUrl, setAvatarUrl] = useState('');
  const [loadingAvatar, setLoadingAvatar] = useState(false);
  const [avatarError, setAvatarError] = useState('');
  const [checkedItems, setCheckedItems] = useState({});
  const navigate = useNavigate();

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    setPaidType(localStorage.getItem('fitgenius_paid_type'));
    setMealPlan(localStorage.getItem('fitgenius_meal_plan') || '');
    setWorkoutPlanText(localStorage.getItem('fitgenius_workout_plan') || '');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
    let userEmail = '';
    let userData = localStorage.getItem('fitgenius_user');
    
    console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage:', userData);
    
    if (userData) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ JSON —Å—Ç—Ä–æ–∫–∞
        if (userData.startsWith('{')) {
          const parsedData = JSON.parse(userData);
          if (parsedData.email) {
            userEmail = parsedData.email;
          }
        } else if (userData.includes('@')) {
          // –ü—Ä–æ—Å—Ç–æ email —Å—Ç—Ä–æ–∫–∞
          userEmail = userData;
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
        userEmail = userData;
      }
    }
    
    console.log('–û—á–∏—â–µ–Ω–Ω—ã–π email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userEmail);
    const cleanEmail = userEmail;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–º—è –∏–∑ Firestore
    async function fetchName() {
      let name = localStorage.getItem('fitgenius_name') || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      if (cleanEmail) {
        setLoadingName(true);
        try {
          const docRef = doc(db, 'users', cleanEmail);
          const snap = await getDoc(docRef);
          if (snap.exists() && snap.data().name) {
            name = snap.data().name;
            localStorage.setItem('fitgenius_name', name);
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–º–µ–Ω–∏:', error);
        }
        setLoadingName(false);
      }
      setUser({ email: cleanEmail, name });
      setNewName(name);
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    async function fetchActivity() {
      if (!cleanEmail) return;
      setLoadingActivity(true);
      try {
        const activityQuery = query(
          collection(db, 'user_activity'),
          where('email', '==', cleanEmail),
          orderBy('timestamp', 'desc')
        );
        const snap = await getDocs(activityQuery);
        setActivity(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
      }
      setLoadingActivity(false);
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    async function fetchAvatar() {
      if (!cleanEmail) return;
      setLoadingAvatar(true);
      setAvatarError('');
      try {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞ –¥–ª—è:', cleanEmail);
        const url = await getUserAvatar(cleanEmail);
        console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–π URL –∞–≤–∞—Ç–∞—Ä–∞:', url);
        if (url) setAvatarUrl(url);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞:', error);
        setAvatarError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞');
      }
      setLoadingAvatar(false);
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ–∫–±–æ–∫—Å–æ–≤ –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫
    const savedCheckedItems = localStorage.getItem('fitgenius_shopping_list');
    if (savedCheckedItems) {
      try {
        setCheckedItems(JSON.parse(savedCheckedItems));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫:', error);
        setCheckedItems({});
      }
    }
    
    fetchName();
    fetchActivity();
    fetchAvatar();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    if (cleanEmail) {
      logUserActivity({
        email: cleanEmail,
        type: 'login',
        desc: '–í—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'
      });
    }
  }, []);
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleNameSave = async () => {
    if (!newName.trim() || !user.email) return;
    
    setLoadingName(true);
    try {
      await setDoc(doc(db, 'users', user.email), { 
        name: newName.trim(),
        email: user.email 
      }, { merge: true });
      
      localStorage.setItem('fitgenius_name', newName.trim());
      setUser(prev => ({ ...prev, name: newName.trim() }));
      setEditName(false);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      await logUserActivity(user.email, 'profile_update', `–ò–∑–º–µ–Ω–µ–Ω–æ –∏–º—è –Ω–∞: ${newName.trim()}`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏');
    }
    setLoadingName(false);
  };
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
  const handleAvatarChange = async (e) => {
    const file = e.target.files[0];
    if (!file || !user.email) return;
    
    if (file.size > 5 * 1024 * 1024) {
      setAvatarError('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB');
      return;
    }
    
    setLoadingAvatar(true);
    setAvatarError('');
    
    try {
      console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.email);
      const imageUrl = await uploadUserAvatarToImgbb(file, user.email);
      console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–π URL –∞–≤–∞—Ç–∞—Ä–∞:', imageUrl);
      setAvatarUrl(imageUrl);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      await logUserActivity(user.email, 'profile_update', '–û–±–Ω–æ–≤–ª–µ–Ω –∞–≤–∞—Ç–∞—Ä');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞:', error);
      setAvatarError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    }
    
    setLoadingAvatar(false);
  };
  
  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ–∫–±–æ–∫—Å–∞ –≤ —Å–ø–∏—Å–∫–µ –ø–æ–∫—É–ø–æ–∫
  const toggleCheckbox = (item) => {
    setCheckedItems(prev => ({
      ...prev,
      [item]: !prev[item]
    }));
    localStorage.setItem('fitgenius_shopping_list', JSON.stringify(checkedItems));
  };
  
  // –≠–∫—Å–ø–æ—Ä—Ç –ø–ª–∞–Ω–∞ –≤ PDF
  const handleExport = () => {
    const text = tab === 'food' ? mealPlan : workoutPlanText;
    exportTextToPDF(text, `${tab}_plan.pdf`);
  };
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞–Ω–∞–º
  const isFoodPaid = paidType === 'food' || paidType === 'combo';
  const isWorkoutPaid = paidType === 'workout' || paidType === 'combo';
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const checkAdmin = () => {
    if (!user.email) return false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π email –∞–¥–º–∏–Ω–∞
    for (const adminEmail of ADMINS) {
      if (user.email.toLowerCase() === adminEmail.toLowerCase()) {
        return true;
      }
    }
    
    return false;
  };
  
  const isAdmin = checkAdmin();
  console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞:', user.email, ADMINS, isAdmin);
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
  const goToAdmin = () => {
    navigate('/admin');
  };
  
  // –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleLogout = () => {
    localStorage.removeItem('fitgenius_user');
    localStorage.removeItem('fitgenius_name');
    localStorage.removeItem('fitgenius_paid_type');
    localStorage.removeItem('fitgenius_meal_plan');
    localStorage.removeItem('fitgenius_workout_plan');
    navigate('/');
  };

  return (
    <div className="dashboard-container">
      <AnimatedBackground />
      
      <motion.div 
        className="dashboard-content"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <div className="user-profile">
          <div className="profile-decoration"></div>
          <div className="profile-decoration"></div>
          
          <div className="avatar-container">
            <div className="avatar-wrapper">
              {loadingAvatar ? (
                <div className="avatar-placeholder">‚è≥</div>
              ) : (
                <div className="avatar-image-container">
                  {avatarUrl ? (
                    <img src={avatarUrl} alt="–ê–≤–∞—Ç–∞—Ä" className="avatar-image" />
                  ) : (
                    <div className="avatar-placeholder">
                      {user.name ? user.name.charAt(0).toUpperCase() : 'üë§'}
                    </div>
                  )}
                  
                  <div className="avatar-overlay">
                    <label htmlFor="avatar-upload" className="avatar-edit-overlay">
                      <span className="avatar-edit-text">–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ</span>
                      <input
                        id="avatar-upload"
                        type="file"
                        accept="image/*"
                        style={{ display: 'none' }}
                        onChange={handleAvatarChange}
                        disabled={loadingAvatar}
                      />
                    </label>
                  </div>
                </div>
              )}
            </div>
            {avatarError && (
              <div style={{ color: '#ff6b6b', marginTop: '0.5rem', fontSize: '0.9rem', textAlign: 'center' }}>
                {avatarError}
              </div>
            )}
          </div>
          
          <div className="user-info">
            {editName ? (
              <div className="name-edit-form">
                <input
                  type="text"
                  className="name-input"
                  value={newName}
                  onChange={e => setNewName(e.target.value)}
                  maxLength={32}
                  disabled={loadingName}
                  placeholder="–í–∞—à–µ –∏–º—è"
                />
                <button 
                  className="btn btn-primary"
                  onClick={handleNameSave} 
                  disabled={loadingName || !newName.trim()}
                >
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </button>
                <button 
                  className="btn btn-secondary"
                  onClick={() => {
                    setEditName(false);
                    setNewName(user.name);
                  }} 
                  disabled={loadingName}
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            ) : (
              <div className="user-name">
                {user.name}
                <button 
                  className="edit-name-btn"
                  onClick={() => setEditName(true)}
                  title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è"
                >
                  ‚úèÔ∏è
                </button>
                {loadingName && <span style={{ fontSize: '0.9rem', opacity: 0.7 }}>‚è≥</span>}
              </div>
            )}
            
            <div className="user-email">{user.email || '–ì–æ—Å—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø'}</div>
            
            <div className="user-actions">
              {isAdmin && (
                <button className="btn btn-admin" onClick={goToAdmin}>
                  <span>üëë</span> –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                </button>
              )}
              <button className="btn btn-secondary" onClick={handleLogout}>
                <span>üö™</span> –í—ã–π—Ç–∏
              </button>
            </div>
          </div>
        </div>
        
        {/* –í–∫–ª–∞–¥–∫–∏ */}
        <div className="tabs-container">
          <div 
            className={`tab ${tab === 'food' ? 'active' : ''}`}
            onClick={() => setTab('food')}
          >
            üçΩÔ∏è –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è
          </div>
          <div 
            className={`tab ${tab === 'workout' ? 'active' : ''}`}
            onClick={() => setTab('workout')}
          >
            üí™ –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
          </div>
          <div 
            className={`tab ${tab === 'shopping' ? 'active' : ''}`}
            onClick={() => setTab('shopping')}
          >
            üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
          </div>
          <div 
            className={`tab ${tab === 'activity' ? 'active' : ''}`}
            onClick={() => setTab('activity')}
          >
            üìä –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
          </div>
        </div>
        
        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
        <AnimatePresence mode="wait">
          <motion.div 
            key={tab}
            className="tab-content"
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -10 }}
            transition={{ duration: 0.3 }}
          >
            {/* –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è */}
            {tab === 'food' && (
              <>
                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>
                  <h2>üçΩÔ∏è –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è</h2>
                  {isFoodPaid && mealPlan && (
                    <button className="btn btn-primary" onClick={handleExport}>
                      <span>üì•</span> –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF
                    </button>
                  )}
                </div>
                
                {isFoodPaid ? (
                  mealPlan ? (
                    <div className="content-card">
                      <pre style={{ 
                        whiteSpace: 'pre-wrap', 
                        fontFamily: 'inherit',
                        lineHeight: '1.6',
                        fontSize: '1rem',
                        color: '#374151'
                      }}>
                        {mealPlan}
                      </pre>
                    </div>
                  ) : (
                    <div className="content-card" style={{ textAlign: 'center', padding: '3rem' }}>
                      <div style={{ fontSize: '4rem', marginBottom: '1rem' }}>üçΩÔ∏è</div>
                      <h3 style={{ marginBottom: '1rem', color: '#4fd165' }}>–í–∞—à –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –≥–æ—Ç–æ–≤–∏—Ç—Å—è!</h3>
                      <p style={{ color: '#64748b', fontSize: '1.1rem' }}>
                        –ú—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –≤ –∞–Ω–∫–µ—Ç–µ. 
                        –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤.
                      </p>
                    </div>
                  )
                ) : (
                  <div className="content-card" style={{ textAlign: 'center', padding: '3rem' }}>
                    <div style={{ fontSize: '4rem', marginBottom: '1rem' }}>üîí</div>
                    <h3 style={{ marginBottom: '1rem', color: '#ef4444' }}>–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω</h3>
                    <p style={{ color: '#64748b', fontSize: '1.1rem', marginBottom: '2rem' }}>
                      –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ.
                    </p>
                    <button 
                      className="btn btn-primary"
                      onClick={() => navigate('/choose')}
                      style={{ fontSize: '1.1rem', padding: '14px 28px' }}
                    >
                      <span>üõí</span> –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ
                    </button>
                  </div>
                )}
              </>
            )}
            
            {/* –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ */}
            {tab === 'workout' && (
              <>
                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>
                  <h2>üí™ –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</h2>
                  {isWorkoutPaid && workoutPlanText && (
                    <button className="btn btn-primary" onClick={handleExport}>
                      <span>üì•</span> –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF
                    </button>
                  )}
                </div>
                
                {isWorkoutPaid ? (
                  workoutPlanText ? (
                    <div className="content-card">
                      <pre style={{ 
                        whiteSpace: 'pre-wrap', 
                        fontFamily: 'inherit',
                        lineHeight: '1.6',
                        fontSize: '1rem',
                        color: '#374151'
                      }}>
                        {workoutPlanText}
                      </pre>
                    </div>
                  ) : (
                    <div className="content-card" style={{ textAlign: 'center', padding: '3rem' }}>
                      <div style={{ fontSize: '4rem', marginBottom: '1rem' }}>üí™</div>
                      <h3 style={{ marginBottom: '1rem', color: '#4fd165' }}>–í–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≥–æ—Ç–æ–≤–∏—Ç—Å—è!</h3>
                      <p style={{ color: '#64748b', fontSize: '1.1rem' }}>
                        –ú—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. 
                        –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤.
                      </p>
                    </div>
                  )
                ) : (
                  <div className="content-card" style={{ textAlign: 'center', padding: '3rem' }}>
                    <div style={{ fontSize: '4rem', marginBottom: '1rem' }}>üîí</div>
                    <h3 style={{ marginBottom: '1rem', color: '#ef4444' }}>–ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω</h3>
                    <p style={{ color: '#64748b', fontSize: '1.1rem', marginBottom: '2rem' }}>
                      –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ.
                    </p>
                    <button 
                      className="btn btn-primary"
                      onClick={() => navigate('/choose')}
                      style={{ fontSize: '1.1rem', padding: '14px 28px' }}
                    >
                      <span>üõí</span> –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ
                    </button>
                  </div>
                )}
              </>
            )}
            
            {/* –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ */}
            {tab === 'shopping' && (
              <>
                <h2>üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫</h2>
                <div className="content-card">
                  <p style={{ marginBottom: '1.5rem', color: '#64748b' }}>
                    –û—Ç–º–µ—á–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –º–µ—Ä–µ –ø–æ–∫—É–ø–∫–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
                  </p>
                  <div className="shopping-list">
                    {shoppingList.map((item, index) => (
                      <motion.div
                        key={item}
                        className={`shopping-item ${checkedItems[item] ? 'checked' : ''}`}
                        onClick={() => toggleCheckbox(item)}
                        initial={{ opacity: 0, scale: 0.9 }}
                        animate={{ opacity: 1, scale: 1 }}
                        transition={{ duration: 0.2, delay: index * 0.05 }}
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                      >
                        <div className={`shopping-checkbox ${checkedItems[item] ? 'checked' : ''}`}>
                          {checkedItems[item] && <span>‚úì</span>}
                        </div>
                        <span>{item}</span>
                      </motion.div>
                    ))}
                  </div>
                </div>
              </>
            )}
            
            {/* –ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
            {tab === 'activity' && (
              <>
                <h2>üìä –ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h2>
                {loadingActivity ? (
                  <div className="content-card" style={{ textAlign: 'center', padding: '3rem' }}>
                    <div style={{ fontSize: '2rem', marginBottom: '1rem' }}>‚è≥</div>
                    <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...</p>
                  </div>
                ) : activity.length > 0 ? (
                  <div className="activity-list">
                    {activity.map((item, index) => (
                      <motion.div 
                        key={item.id}
                        className="activity-item"
                        initial={{ opacity: 0, x: -20 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ duration: 0.3, delay: index * 0.05 }}
                      >
                        <div className="activity-icon">
                          {getActivityIcon(item.type)}
                        </div>
                        <div className="activity-details">
                          <div className="activity-date">
                            {formatDate(item.timestamp)}
                          </div>
                          <div className="activity-action">
                            {item.type === 'login' && '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É'}
                            {item.type === 'purchase' && '–ü–æ–∫—É–ø–∫–∞'}
                            {item.type === 'survey' && '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã'}
                            {item.type === 'profile_update' && '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è'}
                            {item.type === 'plan_view' && '–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–ª–∞–Ω–∞'}
                            {!['login', 'purchase', 'survey', 'profile_update', 'plan_view'].includes(item.type) && item.desc}
                          </div>
                        </div>
                      </motion.div>
                    ))}
                  </div>
                ) : (
                  <div className="content-card" style={{ textAlign: 'center', padding: '3rem' }}>
                    <div style={{ fontSize: '4rem', marginBottom: '1rem' }}>üìä</div>
                    <h3 style={{ marginBottom: '1rem', color: '#64748b' }}>–ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—É—Å—Ç–∞</h3>
                    <p style={{ color: '#64748b' }}>
                      –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–∞–π—Ç–µ: –≤—Ö–æ–¥—ã, –ø–æ–∫—É–ø–∫–∏, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.
                    </p>
                  </div>
                )}
              </>
            )}
          </motion.div>
        </AnimatePresence>
      </motion.div>
    </div>
  );
}

export default DashboardPageV2;
